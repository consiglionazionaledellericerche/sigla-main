<?xml version='1.0' encoding='UTF-8'?>
<!--
  ~ Copyright (C) 2019  Consiglio Nazionale delle Ricerche
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU Affero General Public License as
  ~     published by the Free Software Foundation, either version 3 of the
  ~     License, or (at your option) any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU Affero General Public License for more details.
  ~
  ~     You should have received a copy of the GNU Affero General Public License
  ~     along with this program.  If not, see <https://www.gnu.org/licenses/>.
  -->

<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:task="http://www.springframework.org/schema/task"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:util="http://www.springframework.org/schema/util"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
						http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:META-INF/spring/*.properties</value>
				<value>classpath*:repository.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="systemPropertiesMode" value="2"/>
	</bean>

	<bean name="props-pec-mail" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<value>
				mail.imap.host=${pec.mail.imap.host}
				pec.url.name=${pec.url.name}
				mail.imap.auth=${pec.mail.imap.auth}
				mail.imap.ssl.enable=${pec.mail.imap.ssl.enable}
				mail.imap.port=${pec.mail.imap.port}
				mail.imap.socketFactory.class=${pec.mail.imap.socketFactory.class}
				mail.imap.connectiontimeout=${pec.mail.imap.connectiontimeout}
				mail.imap.timeout=${pec.mail.imap.timeout}
			</value>
		</property>
	</bean>

	<context:component-scan base-package="it.cnr.contab.spring, it.cnr.contab.service, it.cnr.si" />

	<import resource="classpath*:it/cnr/contab/storage/service/storage-service-context.xml"/>
	<import resource="classpath*:it/cnr/contab/service/sdi-client-service-context.xml"/>

	<bean id="trovatoProperties" class="it.cnr.contab.docamm00.client.TrovatoProperties">
		<property name="trovatoTargetEndpoint" value="${TrovatoTargetEndpoint}" />
		<property name="trovatoSiglaRestClientUser" value="${TrovatoSiglaRestClientUser}" />
		<property name="trovatoSiglaRestClientPassword" value="${TrovatoSiglaRestClientPassword}" />
	</bean>
		<bean id="helpdeskProperties" class="it.cnr.contab.utenze00.service.HelpdeskProperties">
		<property name="helpdeskTargetEndpoint" value="${HelpdeskTargetEndpoint}" />
		<property name="helpdeskSiglaRestClientUser" value="${HelpdeskSiglaRestClientUser}" />
		<property name="helpdeskSiglaRestClientPassword" value="${HelpdeskSiglaRestClientPassword}" />
	</bean>
	<bean id="digitalPreservationProperties" class="it.cnr.contab.dp.DigitalPreservationProperties">
		<property name="digitalPreservationCodAmm" value="${DigitalPreservationCodAmm}" />
		<property name="digitalPreservationCodRegFA" value="${DigitalPreservationCodRegFA}" />
		<property name="digitalPreservationCodRegFP" value="${DigitalPreservationCodRegFP}" />
	</bean>
	<bean id="gson" class="com.google.gson.Gson"/>

	<bean id="testJsonDataSource"
		  class="it.cnr.contab.reports.service.dataSource.TestJsonDataSource" >
	</bean>
	<bean id="StampaInventarioJsonDataSource"
		  class="it.cnr.contab.reports.service.dataSource.StampaInventarioJsonDataSource" >
	</bean>


	<util:map id="mapPrintDsOfflineImplemented" map-class="java.util.HashMap">
		<entry key="/ordmag/iss/TestJsonDs.jasper" value-ref="testJsonDataSource" />
		<entry key="/ordmag/magazzino/stampa_inventario.jasper" value-ref="StampaInventarioJsonDataSource" />
	</util:map>

	<bean id="printService" class="it.cnr.contab.reports.service.PrintService">
		<property name="serverPrint" value="${print.server.name}"/>
		<property name="printDsOfflineImplemented" ref="mapPrintDsOfflineImplemented"/>
	</bean>
  
	<bean id="pagopaService" class="it.cnr.contab.pagopa.rest.PagopaService">
		<property name="baseUrl" value="${pagopa.govpay.base_url}"/>
		<property name="username" value="${pagopa.govpay.username}"/>
		<property name="password" value="${pagopa.govpay.password}"/>
	</bean>

	<bean id="fatturaPassivaElettronicaService" class="it.cnr.contab.docamm00.service.FatturaPassivaElettronicaService">
		<property name="fatturazioneElettronicaClient" ref="fatturazioneElettronicaClient"/>
		<property name="pecScanDisable" value="${pec.scan.disable}"/>
		<property name="pecHostName" value="${pec.host.name}"/>

		<property name="pecURLName" value="${pec.url.name}"/>
		<property name="pecHostAddress" value="${pec.host.address}"/>
		<property name="pecHostAddressReturn" value="${pec.host.address.return}"/>
		<property name="pecSDIAddress" value="${pec.sdi.address}"/>
		<property name="pecSDIFromStringTerm" value="${pec.sdi.from.string.term}"/>
		<property name="pecSDISubjectRiceviFattureTerm" value="${pec.sdi.subject.ricevi.fatture.term}"/>
		<property name="pecScanFolderName" value="${pec.scan.folder.name}"/>
		<property name="pecScanReceiptFolderName" value="${pec.scan.receipt.folder.name}"/>

		<property name="pecSDISubjectFatturaAttivaRicevutaConsegnaTerm" value="${pec.sdi.subject.fatturaAttiva.notifica.ricevutaConsegna.term}"/>
		<property name="pecSDISubjectFatturaAttivaNotificaScartoTerm" value="${pec.sdi.subject.fatturaAttiva.notifica.scarto.term}"/>
		<property name="pecSDISubjectFatturaAttivaMancataConsegnaTerm" value="${pec.sdi.subject.fatturaAttiva.notifica.mancataConsegna.term}"/>
		<property name="pecSDISubjectNotificaEsitoTerm" value="${pec.sdi.subject.notifica.esito.term}"/>
		<property name="pecSDISubjectNotificaRifiutoTerm" value="${pec.sdi.subject.notifica.rifiuto.term}"/>

		<property name="pecSDISubjectFatturaAttivaDecorrenzaTerminiTerm" value="${pec.sdi.subject.fatturaAttiva.notifica.decorrenzaTermini.term}"/>
		<property name="pecSDISubjectFatturaAttivaAttestazioneTrasmissioneFatturaTerm" value="${pec.sdi.subject.fatturaAttiva.notifica.attestazioneTrasmissioneFattura.term}"/>
		<property name="pecSDISubjectFatturaAttivaInvioTerm" value="${pec.sdi.subject.fatturaAttiva.invio.term}"/>
		<property name="pecSDISubjectMancataConsegnaPecTerm" value="${pec.sdi.subject.fatturaAttiva.mancataConsegna.term}"/>
		<property name="pecSDISubjectNotificaPecTerm" value="${pec.sdi.subject.notificaPec.term}"/>
		<property name="pecSDISubjectFatturaPassivaNotificaScartoEsitoTerm" value="${pec.sdi.subject.fatturaPassiva.notifica.scartoEsito.term}"/>

		<property name="pecMailConf" ref="props-pec-mail"></property>
	</bean>

	<bean name="props-aruba" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<value>
				arubaRemoteSignService.certId=${arubaRemoteSignService.certId}
				arubaRemoteSignService.typeOtpAuth=${arubaRemoteSignService.typeOtpAuth}
				arubaRemoteSignService.url=${arubaRemoteSignService.url}
			</value>
		</property>
	</bean>
	<bean id="arubaSignServiceClient" class="it.cnr.si.firmadigitale.firma.arss.ArubaSignServiceClient">
		<property name="props" ref="props-aruba"></property>
	</bean>


	<!-- scheduler -->
	<task:scheduled-tasks scheduler="siglaScheduler">
		<task:scheduled ref="fatturaPassivaElettronicaService" method="allineaNotificheExecute" cron="${allinea.notifiche.cron.expression}" />
		<task:scheduled ref="fatturaPassivaElettronicaService" method="execute" cron="${pec.cron.expression}" />
		<task:scheduled ref="documentiContabiliService" method="executeMessaggiSiopeplus" cron="${siopeplus.cron.expression}" />
		<task:scheduled ref="pdgVariazioniService" method="executeDeletePECMessage" cron="${pec.cron.expression}" />
		<task:scheduled ref="utilService" method="executeAggiornaGECO" cron="${aggiorna.geco.cron.expression}" />
		<task:scheduled ref="utilService" method="executeDeleteMessaggi" cron="${delete.messaggi.cron.expression}" />
		<task:scheduled ref="printService" method="executeReportWithJsonDataSource" cron="${print.jsondatasource.cron.expression}" />
	</task:scheduled-tasks>

	<task:scheduler id="siglaScheduler"  pool-size="10"/>

	<task:executor id="siglaTaskExecutor" pool-size="5"/>
	<task:annotation-driven  executor="siglaTaskExecutor" scheduler="siglaScheduler"/>
	<!-- / scheduler -->
</beans>